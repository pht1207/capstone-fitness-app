-- MySQL Script generated by MySQL Workbench
-- Mon Feb 19 16:02:07 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema fitnessAppDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema fitnessAppDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fitnessAppDB` DEFAULT CHARACTER SET utf8 ;
USE `fitnessAppDB` ;

-- -----------------------------------------------------
-- Table `fitnessAppDB`.`userTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`userTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`userTable` (
  `userTable_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` CHAR(60) NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `DOB` DATE NOT NULL,
  `weight` DECIMAL NOT NULL,
  `notificationsOn` TINYINT NULL DEFAULT 1,
  PRIMARY KEY (`userTable_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`goalTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`goalTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`goalTable` (
  `goalTable_id` INT NOT NULL AUTO_INCREMENT,
  `goalName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`goalTable_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`user_goalTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`user_goalTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`user_goalTable` (
  `userGoalTable_id` INT NOT NULL AUTO_INCREMENT,
  `goalTable_id` INT NOT NULL,
  `userTable_id` INT NOT NULL,
  `dateTimeChanged` DATETIME NOT NULL,
  PRIMARY KEY (`userGoalTable_id`),
  INDEX `goalTable_id_idx` (`goalTable_id` ASC) VISIBLE,
  INDEX `userTable_id_idx` (`userTable_id` ASC) VISIBLE,
  CONSTRAINT `goalTable_id`
    FOREIGN KEY (`goalTable_id`)
    REFERENCES `fitnessAppDB`.`goalTable` (`goalTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `userTable_id`
    FOREIGN KEY (`userTable_id`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`exerciseTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`exerciseTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`exerciseTable` (
  `exerciseTable_id` INT NOT NULL AUTO_INCREMENT,
  `exerciseName` VARCHAR(45) NOT NULL,
  `muscleGroup` VARCHAR(45) NULL,
  `setCount` INT NULL,
  `repCount` INT NULL,
  `caloriesBurned` INT NULL,
  `timeAmountInMins` INT NULL,
  `createdBy` INT NULL,
  PRIMARY KEY (`exerciseTable_id`),
  INDEX `createdBy_idx` (`createdBy` ASC) VISIBLE,
  CONSTRAINT `createdBy`
    FOREIGN KEY (`createdBy`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`user_exerciseTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`user_exerciseTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`user_exerciseTable` (
  `userExerciseTable_id` INT NOT NULL AUTO_INCREMENT,
  `userTable_id` INT NOT NULL,
  `exerciseTable_id` INT NOT NULL,
  `timeStarted` DATETIME NULL,
  `timeCompleted` DATETIME NULL,
  `user_exerciseTablecol` VARCHAR(45) NULL,
  PRIMARY KEY (`userExerciseTable_id`),
  INDEX `userTable_id_idx` (`userTable_id` ASC) VISIBLE,
  INDEX `exerciseTable_id_idx` (`exerciseTable_id` ASC) VISIBLE,
  CONSTRAINT `userTable_id`
    FOREIGN KEY (`userTable_id`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `exerciseTable_id`
    FOREIGN KEY (`exerciseTable_id`)
    REFERENCES `fitnessAppDB`.`exerciseTable` (`exerciseTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
ROW_FORMAT = DEFAULT;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`dailyNutritionTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`dailyNutritionTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`dailyNutritionTable` (
  `dailyNutritionTable_id` INT NOT NULL AUTO_INCREMENT,
  `userTable_id` INT NOT NULL,
  `caloriesGoal` INT NULL,
  `carbsGoal` INT NULL,
  `proteinGoal` INT NULL,
  `fatsGoal` INT NULL,
  `dateFor` DATE NULL,
  PRIMARY KEY (`dailyNutritionTable_id`),
  INDEX `userTable_id_idx` (`userTable_id` ASC) VISIBLE,
  CONSTRAINT `userTable_id`
    FOREIGN KEY (`userTable_id`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`foodsTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`foodsTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`foodsTable` (
  `foodsTable_id` INT NOT NULL AUTO_INCREMENT,
  `foodName` VARCHAR(45) NOT NULL,
  `calorieCount` INT NULL,
  `carbCount` INT NULL,
  `proteinCount` INT NULL,
  `fatCount` INT NULL,
  PRIMARY KEY (`foodsTable_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`notificationsTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`notificationsTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`notificationsTable` (
  `notificationsTable_id` INT NOT NULL AUTO_INCREMENT,
  `notificationName` VARCHAR(45) NULL,
  `innerText` VARCHAR(150) NULL,
  PRIMARY KEY (`notificationsTable_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`user_notificationsTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`user_notificationsTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`user_notificationsTable` (
  `userNotificationsTable_id` INT NOT NULL AUTO_INCREMENT,
  `userTable_id` INT NOT NULL,
  `notificationsTable_id` INT NOT NULL,
  `dateTimeSent` DATETIME NOT NULL,
  PRIMARY KEY (`userNotificationsTable_id`),
  INDEX `userTable_id_idx` (`userTable_id` ASC) VISIBLE,
  INDEX `notificationsTable_id_idx` (`notificationsTable_id` ASC) VISIBLE,
  CONSTRAINT `userTable_id`
    FOREIGN KEY (`userTable_id`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `notificationsTable_id`
    FOREIGN KEY (`notificationsTable_id`)
    REFERENCES `fitnessAppDB`.`notificationsTable` (`notificationsTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`userConsumptionTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`userConsumptionTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`userConsumptionTable` (
  `userConsumptionTable_id` INT NOT NULL AUTO_INCREMENT,
  `userTable_id` INT NOT NULL,
  `caloriesConsumed` INT NULL,
  `carbsConsumed` INT NULL,
  `proteinConsumed` INT NULL,
  `fatsConsumed` INT NULL,
  `dateTimeConsumed` DATETIME NULL,
  PRIMARY KEY (`userConsumptionTable_id`),
  INDEX `userTable_id_idx` (`userTable_id` ASC) VISIBLE,
  CONSTRAINT `userTable_id`
    FOREIGN KEY (`userTable_id`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`workoutTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`workoutTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`workoutTable` (
  `workoutTable_id` INT NOT NULL AUTO_INCREMENT,
  `workoutName` VARCHAR(45) NULL,
  `workoutDescription` VARCHAR(45) NULL,
  `createdAt` DATETIME NULL,
  `updatedAt` DATETIME NULL,
  `createdBy` INT NULL,
  PRIMARY KEY (`workoutTable_id`),
  INDEX `createdBy_idx` (`createdBy` ASC) VISIBLE,
  CONSTRAINT `createdBy`
    FOREIGN KEY (`createdBy`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`workout_exerciseTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`workout_exerciseTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`workout_exerciseTable` (
  `workoutExerciseTable_id` INT NOT NULL AUTO_INCREMENT,
  `workoutTable_id` INT NOT NULL,
  `exerciseTable_id` INT NOT NULL,
  PRIMARY KEY (`workoutExerciseTable_id`),
  INDEX `workoutTable_id_idx` (`workoutTable_id` ASC) VISIBLE,
  INDEX `exerrciseTable_id_idx` (`exerciseTable_id` ASC) VISIBLE,
  CONSTRAINT `workoutTable_id`
    FOREIGN KEY (`workoutTable_id`)
    REFERENCES `fitnessAppDB`.`workoutTable` (`workoutTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `exerrciseTable_id`
    FOREIGN KEY (`exerciseTable_id`)
    REFERENCES `fitnessAppDB`.`exerciseTable` (`exerciseTable_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fitnessAppDB`.`user_workoutTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fitnessAppDB`.`user_workoutTable` ;

CREATE TABLE IF NOT EXISTS `fitnessAppDB`.`user_workoutTable` (
  `userWorkoutTable_id` INT NOT NULL AUTO_INCREMENT,
  `userTable_id` INT NOT NULL,
  `workoutTable_id` INT NOT NULL,
  `timeStarted` DATETIME NULL,
  `timeCompleted` DATETIME NULL,
  PRIMARY KEY (`userWorkoutTable_id`),
  INDEX `userTable_id_idx` (`userTable_id` ASC) VISIBLE,
  INDEX `workoutTable_id_idx` (`workoutTable_id` ASC) VISIBLE,
  CONSTRAINT `userTable_id`
    FOREIGN KEY (`userTable_id`)
    REFERENCES `fitnessAppDB`.`userTable` (`userTable_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `workoutTable_id`
    FOREIGN KEY (`workoutTable_id`)
    REFERENCES `fitnessAppDB`.`workoutTable` (`workoutTable_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `fitnessAppDB`.`goalTable`
-- -----------------------------------------------------
START TRANSACTION;
USE `fitnessAppDB`;
INSERT INTO `fitnessAppDB`.`goalTable` (`goalTable_id`, `goalName`) VALUES (1, 'weightLoss');
INSERT INTO `fitnessAppDB`.`goalTable` (`goalTable_id`, `goalName`) VALUES (2, 'weightGain');
INSERT INTO `fitnessAppDB`.`goalTable` (`goalTable_id`, `goalName`) VALUES (3, 'health');

COMMIT;


-- -----------------------------------------------------
-- Data for table `fitnessAppDB`.`exerciseTable`
-- -----------------------------------------------------
START TRANSACTION;
USE `fitnessAppDB`;
INSERT INTO `fitnessAppDB`.`exerciseTable` (`exerciseTable_id`, `exerciseName`, `muscleGroup`, `setCount`, `repCount`, `caloriesBurned`, `timeAmountInMins`, `createdBy`) VALUES (1, 'Bicep Curls', 'biceps', 3, 8, 15, 5, NULL);
INSERT INTO `fitnessAppDB`.`exerciseTable` (`exerciseTable_id`, `exerciseName`, `muscleGroup`, `setCount`, `repCount`, `caloriesBurned`, `timeAmountInMins`, `createdBy`) VALUES (2, 'Bench Press', 'chest', 3, 8, 20, 5, NULL);
INSERT INTO `fitnessAppDB`.`exerciseTable` (`exerciseTable_id`, `exerciseName`, `muscleGroup`, `setCount`, `repCount`, `caloriesBurned`, `timeAmountInMins`, `createdBy`) VALUES (3, 'Incline Press', 'chest', 3, 8, 20, 5, NULL);
INSERT INTO `fitnessAppDB`.`exerciseTable` (`exerciseTable_id`, `exerciseName`, `muscleGroup`, `setCount`, `repCount`, `caloriesBurned`, `timeAmountInMins`, `createdBy`) VALUES (4, 'Pushups', 'chest', 3, 10, 15, 3, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fitnessAppDB`.`foodsTable`
-- -----------------------------------------------------
START TRANSACTION;
USE `fitnessAppDB`;
INSERT INTO `fitnessAppDB`.`foodsTable` (`foodsTable_id`, `foodName`, `calorieCount`, `carbCount`, `proteinCount`, `fatCount`) VALUES (1, 'banana', 100, 27, 1, 0);
INSERT INTO `fitnessAppDB`.`foodsTable` (`foodsTable_id`, `foodName`, `calorieCount`, `carbCount`, `proteinCount`, `fatCount`) VALUES (2, 'apple', 100, 25, 1, 0);
INSERT INTO `fitnessAppDB`.`foodsTable` (`foodsTable_id`, `foodName`, `calorieCount`, `carbCount`, `proteinCount`, `fatCount`) VALUES (3, 'mcchicken', 360, 37, 14, 17);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fitnessAppDB`.`workoutTable`
-- -----------------------------------------------------
START TRANSACTION;
USE `fitnessAppDB`;
INSERT INTO `fitnessAppDB`.`workoutTable` (`workoutTable_id`, `workoutName`, `workoutDescription`, `createdAt`, `updatedAt`, `createdBy`) VALUES (1, 'chestWorkout', 'This workout is designed to focus on your chest as well as other parts of your upper body.', '', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fitnessAppDB`.`workout_exerciseTable`
-- -----------------------------------------------------
START TRANSACTION;
USE `fitnessAppDB`;
INSERT INTO `fitnessAppDB`.`workout_exerciseTable` (`workoutExerciseTable_id`, `workoutTable_id`, `exerciseTable_id`) VALUES (1, 1, 2);
INSERT INTO `fitnessAppDB`.`workout_exerciseTable` (`workoutExerciseTable_id`, `workoutTable_id`, `exerciseTable_id`) VALUES (2, 1, 3);
INSERT INTO `fitnessAppDB`.`workout_exerciseTable` (`workoutExerciseTable_id`, `workoutTable_id`, `exerciseTable_id`) VALUES (3, 1, 4);

COMMIT;

